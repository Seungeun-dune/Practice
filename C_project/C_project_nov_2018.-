/*https://github.com/SeungEun-dune/C-Project_1-2018.11.-.git*/


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>

long totalday(int y, int m, int d);

void main()
{
    system("COLOR F0");
    // 출력하는 콘솔창의 배경색과 글자색을 정한다.
    // 바탕색: 밝은 흰색, 글자색: 검은색


    int decision;
    //Sleep(900);
    printf("청소 당번을 배치하고\n\n");
    Sleep(900);
    printf("청소 팀별 청소 일수를 정하는 프로그램입니다.\n\n");
    Sleep(900);
    printf("시작하시겠습니까?\n");
    Sleep(700);
    printf("1. 예    2. 아니오\n");
    scanf("%d", &decision);

    if (decision == 1)
    printf("시작합니다!\n\n");

    else
    {
        printf("다시 생각해보세요!\n\n");
        exit(1);
    }

    //시작하기 전 가볍게 몸 풀기!


    int student_num, group_num;

    printf("학생은 몇 명인가요?\n");
    scanf("%d", &student_num);
    printf("학생을 몇 개의 팀으로 나누고자 하나요? (단, 2에서 5까지의 수 입력)\n");
    scanf("%d",&group_num);
    // 학생의 명수와 팀의 개수를 받는다.


    int* array = (int*)malloc(sizeof(int) * student_num);
    int i;
    for(i=0;i<student_num;i++)
    {
        array[i] = i+1;
    }
    // 학생의 출석 번호 순으로 배열에서 순서가 지정됩니다.


    long totalday(int y, int m, int d)
    {
     int months[]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
     int j;
     long total=0L;
     total=(y-1)*365L+(y-1)/4-(y-1)/100+(y-1)/400;
     if(!(y%4) && y%100 || !(y%400))
         months[1]++;
     for(j=0;j<m-1;j++)
     total += months[j];
     total+=d;
     return total;
    }
    // 두 날짜 간의 일수를 구하는 함수를 선언한다.
    // 단, 구간 양 끝의 경계값을 더해준다.


    int fy, fm, fd, sy, sm, sd, subtract;
    long dates;
    printf("\n시작하는 날짜는? (YYYY MM DD)\n");
    scanf("%d %d %d",&fy, &fm, &fd);
    printf("\n끝나는 날짜는? (YYYY MM DD)\n");
    scanf("%d %d %d",&sy, &sm, &sd);
    printf("\n학교장 재량 휴업일과 방학은 총 며칠 인가요?\n");
    scanf("%d",&subtract);
    dates = totalday(sy,sm,sd) - totalday(fy,fm,fd) - subtract +1 ;
    // 위에서 선언한 함수를 이용해 두 날짜 사이의 일수를 구하고,
    // 학교에 나오지 않는 날을 빼준다.


    int a;
    a = dates%group_num;
    // 전체 청소 일수를 청소 팀의 개수로 나눠
    // 각 팀이 청소해야 하는 일수를 구한다.


    int rand_num;
    srand(time(NULL));
    rand_num = rand () %group_num+1;
    // 나머지가 0이 아닌 경우



    if(a == 0)
    printf("\n모든 팀의 청소 일수가 같습니다.\n");
    // 나머지가 0인 경우


    else
    {
        printf("\n팀별 청소 일수가 맞지 않습니다.\n\n");
        printf("한 팀이 청소를 %d일 더 해야 합니다.\n\n",a);
        printf("\n청소를 %d일 더 해야하는 팀을 뽑고 있습니다!\n\n", a);
        printf("'3'\n\n");
        Sleep(1500);
        printf("'2'\n\n");
        Sleep(1500);
        printf("'1'\n\n");
        Sleep(1500);
        printf("축하합니다!\n\n");
        printf("청소를 더 해야하는 팀은 %d팀입니다!\n\n", rand_num);
    }


    // 나머지가 0이 아닌 경우 랜덤함수를 이용해
    // 선택된 한 팀이 청소를 더 하게 한다.
    // 중간에 Sleep 함수를 이용해
    // 결과를 기다리는 사용자의 재미도 더한다.




    printf("학생들을 %d개의 팀으로 나누고 있습니다.\n\n",group_num);

    Sleep(1500);
    int k;
    int mod;
    for (k=0; k<student_num; k++)
    {
        mod = array[k]%group_num;

        if (mod == 0)
        printf("%d번 학생: %d팀\n", array[k], group_num);

        else if (mod == 1)
        printf("%d번 학생: %d팀\n", array[k], 1);

        else if (mod == 2)
        printf("%d번 학생: %d팀\n", array[k], 2);

        else if (mod == 3)
        printf("%d번 학생: %d팀\n", array[k], 3);

        else
        printf("%d번 학생: %d팀\n", array[k], 4);

    }
    // 배수 판정법을 활용해 학생들을 사용자가 입력한 수만큼의 팀으로 나눈다.


    printf("\n\n");
    printf("청소 팀별 명단입니다.\n\n");

    int m;
    int arr2 [100][100];

    for (m=0; m<student_num; m++)
    {
        mod = (m+1)%group_num;

        if (mod == 0)
           mod = group_num;

        else
           mod = (m+1)%group_num;

        arr2 [m][0] = m+1; // 학생 번호
        arr2 [m][1] = mod; // 팀
    }


    int y;
    y = (int)student_num/group_num+1;

    int n,p;


    if (group_num == 2)
    {
        for(p=0; p<2; p++)
        {
            printf("%d팀: ",p+1);
            for(n=0; n<y; n++)
            {
                if (arr2[p+2*n][0] != 0)
                   printf("%d ", arr2[p+2*n][0]);
            }
            printf("\n\n");
        }
    }


    else if (group_num == 3)
    {
        for(p=0; p<3; p++)
        {
            printf("%d팀: ",p+1);
            for(n=0; n<y; n++)
            {
                if (arr2[p+3*n][0] != 0)
                printf("%d ", arr2[p+3*n][0]);
            }
            printf("\n\n");
        }
    }


    else if (group_num == 4)
    {
        for(p=0; p<4; p++)
        {
            printf("%d팀: ",p+1);
            for(n=0; n<y; n++)
            {
                if (arr2[p+4*n][0] != 0)
                printf("%d ", arr2[p+4*n][0]);
            }
            printf("\n\n");
        }
    }


    else
    {
        for(p=0; p<5; p++)
        {
            printf("%d팀: ",p+1);
            for(n=0; n<y; n++)
            {
                if (arr2[p+5*n][0] != 0)
                printf("%d ", arr2[p+5*n][0]);
            }
            printf("\n\n");
        }
    }




    printf("-----------------------------------------------------------");
    printf("-----------------------------------------------------------");

    printf("                  \n총 %ld일 동안\n", dates);
    Sleep(500);
    printf("             \n%d팀으로 나눈 %d명의 학생들이\n", group_num, student_num);
    Sleep(500);
    printf("                   \n%d일씩 청소하고\n", (int)dates/group_num);
    Sleep(500);

    if(a == 0)
    printf("               \n모든 팀의 청소 일수는 같습니다.\n\n");

    else
    printf("               \n%d팀만 %d일 청소합니다.\n\n", rand_num, a+(int)dates/group_num);

    printf("-----------------------------------------------------------");
    printf("-----------------------------------------------------------");

    return 0;


}
